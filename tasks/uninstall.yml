---
- name: Prepare for uninstall docker
  block:
  - name: Check node is in swarm mode
    ignore_errors: yes
    # failed_when: rc >= 2
    register: docker_swarm_status
    command: "{% raw -%} docker info --format '{{ json .Swarm.LocalNodeState }}' {%- endraw %}"
  - name: debug `docker_swarm_status` register
    debug:
      msg: "{{ (docker_swarm_status.stdout.find('inactive') == 1) | ternary('Node not in swarm mode', 'Node in swarm mode') }}"

  - name: Remove all docker stack
    when: docker_swarm_status.stdout.find("inactive") == -1
    shell: '{% raw -%} docker stack rm {{ $(docker stack ls --format "{{ .Name }}") }} {%- endraw %}'
  ## force leave swarm mode if status is active or pending
  - name: Leave swarm mode if actived
    when: docker_swarm_status.stdout.find("inactive") == -1
    command: docker swarm leave -f
  - name: docker clean up system
    command: "{{ item }}"
    loop:
      - docker system prune -f
      - docker image prune -af

  - name: Uninstall Docker packages
    block:
      - name: Stop service docker, if started
        service:
          name: docker
          state: stopped
      - name: remove docker packages
        apt:
          name: "{{ item }}"
          state: absent
          force: yes
          purge: yes
        loop:
          - docker-ce
          - docker-ce-cli
          - containerd.io
      - name: to delete all images, containers, and volumes
        command: rm -rf /var/lib/docker